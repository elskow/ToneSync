# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:mac)

platform :mac do
  desc "Build and package ToneSync"
  lane :build do
    sh("mkdir -p ../build")

    build_mac_app(
      scheme: "ToneSync",
      output_directory: "../build",
      clean: true,
      configuration: "Debug",
      skip_package_pkg: true,
      skip_codesigning: true,
      export_method: "developer-id",
      xcargs: "CODE_SIGN_IDENTITY=- CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO"
    )

    if File.exist?("../build/ToneSync.app")
      sh("rm -f ../build/ToneSync.dmg")

      sh("hdiutil create -volname 'ToneSync' -srcfolder '../build/ToneSync.app' -format UDZO -fs HFS+ -ov '../build/ToneSync.dmg'")
    else
      UI.error("App not found in build directory!")
      next
    end
  end

  desc "Build and notarize for distribution"
  lane :release do
    sh("mkdir -p ../build")

    build_mac_app(
      scheme: "ToneSync",
      output_directory: "../build",
      clean: true,
      configuration: "Release",
      export_method: "developer-id",
      xcargs: "DEVELOPMENT_TEAM='#{ENV["TEAM_ID"]}' CODE_SIGN_IDENTITY='Developer ID Application'"
    )

    if File.exist?("../build/ToneSync.app")
      sh("rm -f ../build/ToneSync.dmg")

      sh("hdiutil create -volname 'ToneSync' -srcfolder '../build/ToneSync.app' -format UDZO -fs HFS+ -ov '../build/ToneSync.dmg'")

      notarize(
        package: "../build/ToneSync.dmg",
        bundle_id: "com.helmyl.ToneSync",
        username: ENV["APPLE_ID"],
        team_id: ENV["TEAM_ID"]
      )
    else
      UI.error("App not found in build directory!")
      next
    end
  end
end